openapi: 3.0.3
info:
  title: 'BVMS Admin'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://bvms.online'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Log in a user and get an authentication token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 1|abcd1234
                  user_type: admin
                properties:
                  token:
                    type: string
                    example: 1|abcd1234
                  user_type:
                    type: string
                    example: admin
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Invalid credentials'
                properties:
                  error:
                    type: string
                    example: 'Invalid credentials'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/forgot-password:
    post:
      summary: 'Forgot Password'
      operationId: forgotPassword
      description: "Send a reset password link to the user's email."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Reset password link sent to your email'
                properties:
                  message:
                    type: string
                    example: 'Reset password link sent to your email'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'User not found'
                properties:
                  error:
                    type: string
                    example: 'User not found'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: user@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Log out the authenticated user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged out'
                properties:
                  message:
                    type: string
                    example: 'Logged out'
      tags:
        - Authentication
  /api/barangays:
    get:
      summary: 'List all barangays'
      operationId: listAllBarangays
      description: 'Get a list of all barangays in the system'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: Binalonan
                    longitude: '12313111'
                    latitude: '1231313131'
                    created_at: '2024-11-25T15:00:22.000000Z'
                    updated_at: '2024-11-25T15:00:22.000000Z'
      tags:
        - 'Barangay Management'
      security: []
  /api/incidents:
    get:
      summary: 'Get a list of all incidents.'
      operationId: getAListOfAllIncidents
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'The page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The page number for pagination.'
            example: 1
            nullable: false
        -
          in: query
          name: per_page
          description: 'The number of items per page.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The number of items per page.'
            example: 10
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'Server Down'
                      description: 'The main server is not responding.'
                      location: 'Server Room'
                      priority: high
                      type: incident
                      status: pending
                      user_id: 5
                      incident_category_id: 2
                      created_at: '2024-11-18T12:00:00.000000Z'
                      updated_at: '2024-11-18T12:00:00.000000Z'
                  links:
                    first: 'http://example.com/api/incidents?page=1'
                    last: 'http://example.com/api/incidents?page=10'
                    prev: null
                    next: 'http://example.com/api/incidents?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 10
                    path: 'http://example.com/api/incidents'
                    per_page: 10
                    to: 10
                    total: 100
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Server Down'
                        description: 'The main server is not responding.'
                        location: 'Server Room'
                        priority: high
                        type: incident
                        status: pending
                        user_id: 5
                        incident_category_id: 2
                        created_at: '2024-11-18T12:00:00.000000Z'
                        updated_at: '2024-11-18T12:00:00.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Server Down'
                        description:
                          type: string
                          example: 'The main server is not responding.'
                        location:
                          type: string
                          example: 'Server Room'
                        priority:
                          type: string
                          example: high
                        type:
                          type: string
                          example: incident
                        status:
                          type: string
                          example: pending
                        user_id:
                          type: integer
                          example: 5
                        incident_category_id:
                          type: integer
                          example: 2
                        created_at:
                          type: string
                          example: '2024-11-18T12:00:00.000000Z'
                        updated_at:
                          type: string
                          example: '2024-11-18T12:00:00.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://example.com/api/incidents?page=1'
                      last:
                        type: string
                        example: 'http://example.com/api/incidents?page=10'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://example.com/api/incidents?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'http://example.com/api/incidents'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
      tags:
        - 'Incident Management'
      security: []
    post:
      summary: 'Store a newly created incident in the database.'
      operationId: storeANewlyCreatedIncidentInTheDatabase
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Power Outage'
                  description: 'There is a power outage in the building.'
                  location: 'Building A, Floor 3'
                  priority: high
                  type: request
                  status: pending
                  incident_category_id: 2
                  created_at: '2024-11-18T12:00:00.000000Z'
                  updated_at: '2024-11-18T12:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Power Outage'
                  description:
                    type: string
                    example: 'There is a power outage in the building.'
                  location:
                    type: string
                    example: 'Building A, Floor 3'
                  priority:
                    type: string
                    example: high
                  type:
                    type: string
                    example: request
                  status:
                    type: string
                    example: pending
                  incident_category_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    example: '2024-11-18T12:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2024-11-18T12:00:00.000000Z'
      tags:
        - 'Incident Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the incident.'
                  example: '"Power Outage"'
                  nullable: false
                description:
                  type: string
                  description: 'A detailed description of the incident.'
                  example: '"There is a power outage in the building."'
                  nullable: false
                location:
                  type: string
                  description: 'The location where the incident occurred.'
                  example: '"Building A, Floor 3"'
                  nullable: false
                priority:
                  type: string
                  description: 'The priority level of the incident.'
                  example: '"high" Allowed values: low, medium, high. Default: low.'
                  nullable: false
                type:
                  type: string
                  description: 'The type of the record.'
                  example: '"request" Allowed values: incident, request. Default: incident.'
                  nullable: false
                status:
                  type: string
                  description: 'The status of the incident.'
                  example: '"pending"'
                  nullable: false
                incident_category_id:
                  type: integer
                  description: 'The ID of the incident category.'
                  example: 2
                  nullable: false
                user_id:
                  type: integer
                  description: 'The ID of the user reporting the incident.'
                  example: 5
                  nullable: false
              required:
                - title
                - description
                - location
                - incident_category_id
                - user_id
      security: []
  '/api/incidents/{id}':
    get:
      summary: 'Get details of a specific incident.'
      operationId: getDetailsOfASpecificIncident
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Server Down'
                  description: 'The main server is not responding.'
                  location: 'Server Room'
                  priority: high
                  type: incident
                  status: resolved
                  user_id: 5
                  incident_category_id: 2
                  created_at: '2024-11-18T12:00:00.000000Z'
                  updated_at: '2024-11-18T12:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Server Down'
                  description:
                    type: string
                    example: 'The main server is not responding.'
                  location:
                    type: string
                    example: 'Server Room'
                  priority:
                    type: string
                    example: high
                  type:
                    type: string
                    example: incident
                  status:
                    type: string
                    example: resolved
                  user_id:
                    type: integer
                    example: 5
                  incident_category_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    example: '2024-11-18T12:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2024-11-18T12:00:00.000000Z'
      tags:
        - 'Incident Management'
      security: []
    put:
      summary: 'Update an existing incident.'
      operationId: updateAnExistingIncident
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Incident updated successfully'
                properties:
                  message:
                    type: string
                    example: 'Incident updated successfully'
      tags:
        - 'Incident Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the incident.'
                  example: '"Network Failure"'
                  nullable: false
                description:
                  type: string
                  description: 'A detailed description of the incident.'
                  example: '"The network connection is down in the west wing."'
                  nullable: false
                location:
                  type: string
                  description: 'The location where the incident occurred.'
                  example: '"West Wing, Room 12"'
                  nullable: false
                priority:
                  type: string
                  description: 'The priority level of the incident.'
                  example: '"medium" Allowed values: low, medium, high.'
                  nullable: false
                type:
                  type: string
                  description: 'The type of the record.'
                  example: '"incident" Allowed values: incident, request.'
                  nullable: false
                status:
                  type: string
                  description: 'The status of the incident.'
                  example: '"resolved"'
                  nullable: false
                incident_category_id:
                  type: integer
                  description: 'The ID of the incident category.'
                  example: 3
                  nullable: false
                user_id:
                  type: integer
                  description: 'The ID of the user reporting the incident.'
                  example: 5
                  nullable: false
      security: []
    delete:
      summary: 'Delete a specific incident.'
      operationId: deleteASpecificIncident
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Incident deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Incident deleted successfully'
      tags:
        - 'Incident Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the incident.'
        example: 1
        required: true
        schema:
          type: integer
  /api/profile:
    get:
      summary: 'Get User Profile'
      operationId: getUserProfile
      description: "Returns the authenticated user's profile information"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Profile Management'
      security: []
    put:
      summary: 'Update User Profile'
      operationId: updateUserProfile
      description: "Updates the authenticated user's profile information"
      parameters: []
      responses: {  }
      tags:
        - 'Profile Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user'
                  example: et
                  nullable: false
                email:
                  type: string
                  description: 'Email of the user'
                  example: hnitzsche@example.net
                  nullable: false
                phone:
                  type: string
                  description: 'Phone number of the user'
                  example: distinctio
                  nullable: false
      security: []
  /api/drivers:
    get:
      summary: 'Get Drivers List'
      operationId: getDriversList
      description: 'Display lists of drivers in the barangay.'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: john@example.com
                  user_type: driver
                  barangay_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: john@example.com
                  user_type:
                    type: string
                    example: driver
                  barangay_id:
                    type: integer
                    example: 1
      tags:
        - 'User Management'
  /api/admins:
    get:
      summary: 'Get Admins List'
      operationId: getAdminsList
      description: 'Display lists of admins in the barangay.'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Jane Doe'
                  email: jane@example.com
                  user_type: admin
                  barangay_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Jane Doe'
                  email:
                    type: string
                    example: jane@example.com
                  user_type:
                    type: string
                    example: admin
                  barangay_id:
                    type: integer
                    example: 1
      tags:
        - 'User Management'
  /api/vehicles:
    get:
      summary: 'List Vehicles'
      operationId: listVehicles
      description: "Get a list of vehicles for the authenticated user's barangay"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      barangay_id: 1
                      status: active
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        barangay_id: 1
                        status: active
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        barangay_id:
                          type: integer
                          example: 1
                        status:
                          type: string
                          example: active
      tags:
        - 'Vehicle Management'
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Vehicle Management'
      security: []
  /api/vehicles/create:
    get:
      summary: 'Show the form for creating a new resource.'
      operationId: showTheFormForCreatingANewResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Vehicle Management'
      security: []
  '/api/vehicles/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Vehicle Management'
      security: []
    put:
      summary: 'Update Vehicle Status'
      operationId: updateVehicleStatus
      description: 'Update the status of a specific vehicle'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vehicle Status updated successfully'
                properties:
                  message:
                    type: string
                    example: 'Vehicle Status updated successfully'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Vehicle not found'
                properties:
                  error:
                    type: string
                    example: 'Vehicle not found'
      tags:
        - 'Vehicle Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'The new status of the vehicle'
                  example: omnis
                  nullable: false
              required:
                - status
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Vehicle Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vehicle.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/vehicles/{vehicle}/edit':
    get:
      summary: 'Show the form for editing the specified resource.'
      operationId: showTheFormForEditingTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Vehicle Management'
      security: []
    parameters:
      -
        in: path
        name: vehicle
        description: 'The vehicle.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPIs for managing authentication"
  -
    name: 'Barangay Management'
    description: "\nAPIs for managing barangays"
  -
    name: 'Incident Management'
    description: "\nAPIs for managing incidents"
  -
    name: 'Profile Management'
    description: "\nAPIs for managing user profiles"
  -
    name: 'User Management'
    description: "\nAPIs for managing users"
  -
    name: 'Vehicle Management'
    description: "\nAPIs for managing vehicles"
