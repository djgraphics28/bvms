name: 'Profile Management'
description: |-

  APIs for managing user profiles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        APIs for managing user profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Get User Profile'
      description: "Returns the authenticated user's profile information"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/update-password
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        APIs for managing user profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Password'
      description: "Updates the authenticated user's password after validating the old password"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: "The user's current password."
        required: true
        example: currentpass123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      new_password:
        name: new_password
        description: 'The new password (min 8 characters).'
        required: true
        example: newpass123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      new_password_confirmation:
        name: new_password_confirmation
        description: 'Confirmation of the new password.'
        required: true
        example: newpass123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      old_password: currentpass123
      new_password: newpass123
      new_password_confirmation: newpass123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Password updated successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "message": "Old password is incorrect"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "Failed to update password"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
