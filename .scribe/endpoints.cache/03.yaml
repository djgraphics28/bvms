## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Incident Management'
description: |-

  APIs for managing incidents
endpoints:
  -
    httpMethods:
      - GET
    uri: api/incidents
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of all incidents.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'The number of items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Server Down",
                "description": "The main server is not responding.",
                "location": "Server Room",
                "priority": "high",
                "type": "incident",
                "status": "pending",
                "user_id": 5,
                "incident_category_id": 2,
                "created_at": "2024-11-18T12:00:00.000000Z",
                "updated_at": "2024-11-18T12:00:00.000000Z"
              }
            ],
            "links": {
              "first": "http://example.com/api/incidents?page=1",
              "last": "http://example.com/api/incidents?page=10",
              "prev": null,
              "next": "http://example.com/api/incidents?page=2"
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 10,
              "path": "http://example.com/api/incidents",
              "per_page": 10,
              "to": 10,
              "total": 100
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/incidents
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created incident in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the incident.'
        required: true
        example: '"Power Outage"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'A detailed description of the incident.'
        required: true
        example: '"There is a power outage in the building."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location where the incident occurred.'
        required: true
        example: '"Building A, Floor 3"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The priority level of the incident.'
        required: false
        example: '"high" Allowed values: low, medium, high. Default: low.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of the record.'
        required: false
        example: '"request" Allowed values: incident, request. Default: incident.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the incident.'
        required: false
        example: '"pending"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      incident_category_id:
        name: incident_category_id
        description: 'The ID of the incident category.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user reporting the incident.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Power Outage"'
      description: '"There is a power outage in the building."'
      location: '"Building A, Floor 3"'
      priority: '"high" Allowed values: low, medium, high. Default: low.'
      type: '"request" Allowed values: incident, request. Default: incident.'
      status: '"pending"'
      incident_category_id: 2
      user_id: 5
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "Power Outage",
            "description": "There is a power outage in the building.",
            "location": "Building A, Floor 3",
            "priority": "high",
            "type": "request",
            "status": "pending",
            "incident_category_id": 2,
            "created_at": "2024-11-18T12:00:00.000000Z",
            "updated_at": "2024-11-18T12:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/incidents/{id}'
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a specific incident.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the incident.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Server Down",
            "description": "The main server is not responding.",
            "location": "Server Room",
            "priority": "high",
            "type": "incident",
            "status": "resolved",
            "user_id": 5,
            "incident_category_id": 2,
            "created_at": "2024-11-18T12:00:00.000000Z",
            "updated_at": "2024-11-18T12:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/incidents/{id}'
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing incident.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the incident to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the incident.'
        required: false
        example: '"Network Failure"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'A detailed description of the incident.'
        required: false
        example: '"The network connection is down in the west wing."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location where the incident occurred.'
        required: false
        example: '"West Wing, Room 12"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The priority level of the incident.'
        required: false
        example: '"medium" Allowed values: low, medium, high.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of the record.'
        required: false
        example: '"incident" Allowed values: incident, request.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the incident.'
        required: false
        example: '"resolved"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      incident_category_id:
        name: incident_category_id
        description: 'The ID of the incident category.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user reporting the incident.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Network Failure"'
      description: '"The network connection is down in the west wing."'
      location: '"West Wing, Room 12"'
      priority: '"medium" Allowed values: low, medium, high.'
      type: '"incident" Allowed values: incident, request.'
      status: '"resolved"'
      incident_category_id: 3
      user_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Incident updated successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/incidents/{id}'
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific incident.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the incident to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Incident deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/incident-categories
    metadata:
      groupName: 'Incident Management'
      groupDescription: |-

        APIs for managing incidents
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all incident categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Vehicular Accident",
                "description": "vehicle accident",
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
