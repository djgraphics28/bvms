## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Vehicle Management'
description: |-

  APIs for managing vehicles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/vehicles
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'List Vehicles'
      description: "Get a list of vehicles for the authenticated user's barangay"
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "barangay_id": 1,
               "status": "active"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Ed5PabD1vcg6ZVe84fh6ak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vehicles/create
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vehicles
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vehicles/{id}'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vehicles/{vehicle}/edit'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for editing the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      vehicle: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/vehicles/{id}'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Vehicle Status'
      description: 'Update the status of a specific vehicle'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'The new status of the vehicle'
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      status: unde
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Vehicle Status updated successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Vehicle not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 668E4kh5cgvD1aefabZPdV3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/vehicles/{id}'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/vehicle-login/{id}'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Log Vehicle Out'
      description: 'Create a new vehicle log entry when vehicle goes out'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: "The status of the vehicle (must be 'out')"
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purpose:
        name: purpose
        description: 'The purpose of the trip'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      driver:
        name: driver
        description: 'The ID of the driver'
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      destination:
        name: destination
        description: 'The destination of the trip'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      status: ducimus
      purpose: sit
      driver: vero
      destination: vel
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Vehicle logged out successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "error": "Vehicle already go out today"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Vehicle not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VD6cPdeabk8g54ZvE16a3fh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/vehicle-logout/{id}'
    metadata:
      groupName: 'Vehicle Management'
      groupDescription: |-

        APIs for managing vehicles
      subgroup: ''
      subgroupDescription: ''
      title: 'Log Vehicle Return'
      description: 'Update vehicle log entry when vehicle returns'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: "The status of the vehicle (must be 'returned')"
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      status: suscipit
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Vehicle return logged successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "error": "No active entry found for this vehicle today"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Vehicle not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d8Pvk3b41gc6fZhV5ED6eaa'
    controller: null
    method: null
    route: null
    custom: []
